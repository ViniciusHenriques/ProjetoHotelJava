/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Hospede;
import servicos.HospedeServicos;
import servicos.ServicosFactory;

/**
 *
 * @author Vinicius
 */
public class UIManHospede extends javax.swing.JInternalFrame {
    DefaultTableModel dtm = new DefaultTableModel(
        new Object[][]{},
        new Object[]{"Código","Nome","CPF","Endereço","Telefone","RG","Cidade","Sexo"});
    /**
     * Creates new form UIManReserva
     */
    public UIManHospede() {
        initComponents();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jrPesq = new javax.swing.JTextField();
        jComboPesq = new javax.swing.JComboBox<>();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jbDeletar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbBUscar = new javax.swing.JButton();
        jbAtualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHospede = new javax.swing.JTable();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtCod = new javax.swing.JTextField();
        jtNome = new javax.swing.JTextField();
        jtCPF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtTelefone = new javax.swing.JTextField();
        jtEnde = new javax.swing.JTextField();
        jtRG = new javax.swing.JTextField();
        jtCidade = new javax.swing.JTextField();
        jrMasculino = new javax.swing.JRadioButton();
        jrFeminino = new javax.swing.JRadioButton();
        jbAlterar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Pesquisa:");

        jrPesq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrPesqKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jrPesqKeyReleased(evt);
            }
        });

        jComboPesq.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nome", "CPF", "Endereço", "Telefone", "RG", "Cidade", "Sexo" }));
        jComboPesq.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboPesqItemStateChanged(evt);
            }
        });
        jComboPesq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboPesqKeyPressed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jrPesq, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jComboPesq, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jrPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jComboPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jrPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeletarActionPerformed(evt);
            }
        });
        jbDeletar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbDeletarKeyPressed(evt);
            }
        });

        jbLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/limpar.png"))); // NOI18N
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });
        jbLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbLimparKeyPressed(evt);
            }
        });

        jbBUscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/detalhes.png"))); // NOI18N
        jbBUscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBUscarActionPerformed(evt);
            }
        });
        jbBUscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbBUscarKeyPressed(evt);
            }
        });

        jbAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/atualizar.png"))); // NOI18N
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });
        jbAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbAtualizarKeyPressed(evt);
            }
        });

        jTableHospede.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "Endereço", "Telefone", "RG", "Cidade", "Sexo"
            }
        ));
        jTableHospede.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableHospedeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableHospede);

        jLayeredPane2.setLayer(jbDeletar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jbLimpar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jbBUscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jbAtualizar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbBUscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jbDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jbAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBUscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbDeletar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Código");

        jLabel3.setText("Nome");

        jLabel4.setText("CPF");

        jLabel5.setText("Endereço");

        jLabel6.setText("Telefone");

        jLabel7.setText("RG");

        jLabel8.setText("Cidade");

        jtCod.setEditable(false);

        jtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNomeFocusLost(evt);
            }
        });
        jtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNomeKeyPressed(evt);
            }
        });

        jtCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCPFFocusLost(evt);
            }
        });
        jtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCPFKeyPressed(evt);
            }
        });

        jLabel9.setText("Sexo");

        jtTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtTelefoneFocusLost(evt);
            }
        });
        jtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtTelefoneKeyPressed(evt);
            }
        });

        jtEnde.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtEndeFocusLost(evt);
            }
        });
        jtEnde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtEndeKeyPressed(evt);
            }
        });

        jtRG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtRGFocusLost(evt);
            }
        });
        jtRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtRGKeyPressed(evt);
            }
        });

        jtCidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCidadeFocusLost(evt);
            }
        });
        jtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCidadeKeyPressed(evt);
            }
        });

        bgSexo.add(jrMasculino);
        jrMasculino.setText("Masculino");
        jrMasculino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrMasculinoKeyPressed(evt);
            }
        });

        bgSexo.add(jrFeminino);
        jrFeminino.setText("Feminino");
        jrFeminino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrFemininoKeyPressed(evt);
            }
        });

        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });
        jbAlterar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbAlterarKeyPressed(evt);
            }
        });

        jLayeredPane3.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jtCod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jtNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jtCPF, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jtTelefone, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jtEnde, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jtRG, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jtCidade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jrMasculino, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jrFeminino, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jbAlterar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(34, 34, 34)
                                .addComponent(jrMasculino)
                                .addGap(18, 18, 18)
                                .addComponent(jrFeminino))
                            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtEnde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jbAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jtCPF, jtCidade, jtCod, jtEnde, jtNome, jtRG, jtTelefone});

        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtEnde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(jtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(22, 22, 22)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrMasculino)
                            .addComponent(jrFeminino)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jtCPF, jtCidade, jtCod, jtEnde, jtNome, jtRG, jtTelefone});

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/manuhos.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void preencherTabela(){
        try {
             HospedeServicos FS = ServicosFactory.getHospedeServicos();
             ArrayList<Hospede> func = FS.buscarHospede();
             
             for(int i=0; i<func.size(); i++){
                dtm.addRow(new String[]{
                    String.valueOf(func.get(i).getIdHospede()),
                    func.get(i).getNome(),
                    func.get(i).getCpf(),
                    func.get(i).getEndereco(),
                    func.get(i).getTelefone(),
                    String.valueOf(func.get(i).getRg()),
                    func.get(i).getCidade(),
                    func.get(i).getSexo()
                    });
                
             }//fecha for
             jTableHospede.setModel(dtm);
         } catch (Exception e) {
             JOptionPane.showMessageDialog(rootPane,"Erro!"+e.getMessage());
         }//fecha catch
     }//fecha preenchertabela
    
    
     private void limpar(){
         dtm.setNumRows(0);
     }//fecha limpar
     
     
     private void deletar(){
         try {
             int linha = jTableHospede.getSelectedRow();
             if(linha ==-1){
                 JOptionPane.showMessageDialog(rootPane, "Selecione uma linha ");
             }else{
                 String id = jTableHospede.getValueAt(linha, 0).toString();
                 int op = JOptionPane.showConfirmDialog(rootPane, "Você tem certeza que deseja excluir??","Alerta",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE );
                 if(op==0){
                     HospedeServicos ws = ServicosFactory.getHospedeServicos();
                     ws.deletar(Long.parseLong(id));
                             
                 }
             
             }
         } catch (Exception e) {
             JOptionPane.showMessageDialog(rootPane, "Erro "+e.getMessage());
         }
     }
     private void filtrar(){
         try {
             if(jrPesq.getText().isEmpty()){
                 limpar();
                 preencherTabela();
             }else{
                 String query = "";
                 String filtro = jComboPesq.getSelectedItem().toString();
                 if(filtro.equalsIgnoreCase("Código")){
                     query = "where idhospede like '"+jrPesq.getText()+"%'";
                 }else if(filtro.equalsIgnoreCase("Nome")){
                     query = "where nome like '%"+jrPesq.getText()+"%'";
                 }else if(filtro.equalsIgnoreCase("cpf")){
                     query = "where cpf like '"+jrPesq.getText()+"%'";
                 }else if(filtro.equalsIgnoreCase("endereco")){
                     query = "where endereco like '"+jrPesq.getText()+"%'";
                 }else if(filtro.equalsIgnoreCase("Telefone")){
                     query = "where telefone like '"+jrPesq.getText()+"%'";
                 
                 }else if(filtro.equalsIgnoreCase("rg")){
                     query = "where rg like '"+jrPesq.getText()+"%'";
                 }else if(filtro.equalsIgnoreCase("sexo")){
                     query = "where sexo like '"+jrPesq.getText()+"%'";
                 }else if(filtro.equalsIgnoreCase("cidade")){
                     query = "where cidade like '"+jrPesq.getText()+"%'";
                 }
                 HospedeServicos ps = ServicosFactory.getHospedeServicos();
                 ArrayList<Hospede> fun = ps.filtrar(query);
                 
                 for(int i = 0; i< fun.size();i++){
                    dtm.addRow(new String[]{
                        String.valueOf(fun.get(i).getIdHospede()),
                        fun.get(i).getNome(),
                        fun.get(i).getCpf(),
                        fun.get(i).getTelefone(),
                        fun.get(i).getEndereco(),
                        String.valueOf(fun.get(i).getRg()),
                        
                        fun.get(i).getCidade(),
                        fun.get(i).getSexo()                      
                        
                    });
                }
                jTableHospede.setModel(dtm);
             }
         } catch (Exception e) {
             jrPesq.setText(null);
            JOptionPane.showMessageDialog(rootPane, "Erro! "+e.getMessage());
         }
     }
     
     private void alterar(){
        
        int linha = jTableHospede.getSelectedRow();
        
        if(linha == -1){
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha");
            return;
        }
        jtCod.setText(jTableHospede.getValueAt(linha, 0).toString());
        jtNome.setText(jTableHospede.getValueAt(linha, 1).toString());
        jtCPF.setText(jTableHospede.getValueAt(linha, 2).toString()); 
        jtEnde.setText(jTableHospede.getValueAt(linha, 3).toString());
        jtTelefone.setText(jTableHospede.getValueAt(linha, 4).toString());
               
        jtRG.setText(jTableHospede.getValueAt(linha, 5).toString());     
        jtCidade.setText(jTableHospede.getValueAt(linha, 6).toString());     
        
        if(jTableHospede.getValueAt(linha, 7).toString().equalsIgnoreCase("masculino")){
            jrMasculino.setSelected(true);
        } else{
            jrFeminino.setSelected(true);
        }  
              
              
        
        
         
        
               
    }//fecha alterar
     
     private void confirmarAlteracao(){
        try {
            Hospede f = new Hospede();
            
            if(!util.validacao.validarString(jtNome.getText())){
                throw new NumberFormatException("Nome invalido!");
            }
            if(!util.validacao.validarCPF(jtCPF.getText())){
                throw new NumberFormatException("CPF invalido!");
            }
            if(jtEnde.getText().isEmpty()){
                throw new NumberFormatException("Endereço invalido!");
            }
            if(!util.validacao.validarNumero(jtTelefone.getText())){
                throw new NumberFormatException("Telefone invalido!");
            }
            if(!util.validacao.validarCPF(jtRG.getText())){
                throw new NumberFormatException("RG invalido!");
            }
            if(!util.validacao.validarString(jtCidade.getText())){
                throw new NumberFormatException("Cidade invalido!");
            }
            f.setIdHospede(Long.parseLong(jtCod.getText()));
            f.setNome(jtNome.getText());
            f.setCpf(jtCPF.getText());
            f.setEndereco(jtEnde.getText());
            f.setTelefone(jtTelefone.getText());
            
            
            
            f.setRg(Long.parseLong(jtRG.getText()));
            f.setCidade(jtCidade.getText());
            
            if(jrMasculino.isSelected()){
                f.setSexo(jrMasculino.getText());
            }else{
                f.setSexo(jrFeminino.getText());
            }
            
            
            
            
            //Enviando o objeto pVO para o banco de dados
            HospedeServicos ps = ServicosFactory.getHospedeServicos();
            //Chamando o método 
            ps.alterarHospede(f);
            
            JOptionPane.showMessageDialog(
                    rootPane, 
                    "Hospede alterado com sucesso!");
            limparCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, 
                    "Erro! "+e.getMessage());
        }//fecha catch
    }//fecha confirmarAlteracao
    private void limparCampos(){
        jtNome.setText(null);
        jtEnde.setText(null);
        jtCod.setText(null);
        jtTelefone.setText(null);
        jtCPF.setText(null);
        jtCidade.setText(null);
        jtRG.setText(null);
        bgSexo.clearSelection();
        
    }
    
    private void buscarLinhaSelecionada(){
        try {
            /* Buscando a linha que o usuário clicou */
            int linha = jTableHospede.getSelectedRow();
            
            /* Testando se o usuário selecionou alguma linha. */
            if (linha != -1) {
                
                /* todos os dados da linha selecionada pelo usuário */
                String idHospede = (String) jTableHospede.getValueAt(linha, 0);
                String nome = (String) jTableHospede.getValueAt(linha, 1);
                String cpf = (String) jTableHospede.getValueAt(linha, 2);
                String endereco = (String) jTableHospede.getValueAt(linha, 3);
                String telefone = (String) jTableHospede.getValueAt(linha, 4);
                
                
                String rg = (String) jTableHospede.getValueAt(linha, 5);
                String cidade = (String) jTableHospede.getValueAt(linha, 6);
                String sexo = (String) jTableHospede.getValueAt(linha, 7);
                
               
               
               
                
                JOptionPane.showMessageDialog(this,
                        "Dados do Hospede selecionado: "
                        +"\ncódigo: "+idHospede
                        +"\nNome: "+nome
                        +"\nCPF: "+cpf
                        +"\nEndereço: "+endereco
                        +"\nTelefone: "+telefone
                        +"\nRG: "+rg
                        +"\nCidade: "+cidade
                        +"\nSexo: "+sexo
                        
                );
            } else {
                JOptionPane.showMessageDialog(this,
                        "Você não selecionou nenhuma linha!");
            }//fecha else
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao selecionar uma linha! " + e.getMessage());
        }//fecha catch
    }//fecha método
    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
        limpar();
       preencherTabela();
    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jbBUscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBUscarActionPerformed
        buscarLinhaSelecionada();
    }//GEN-LAST:event_jbBUscarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        limpar();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeletarActionPerformed
        deletar();
        limpar();
        preencherTabela();
    }//GEN-LAST:event_jbDeletarActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        confirmarAlteracao();
        limpar();
        preencherTabela();
        
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jrPesqKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrPesqKeyReleased
        limpar();
        filtrar();
    }//GEN-LAST:event_jrPesqKeyReleased

    private void jComboPesqItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboPesqItemStateChanged
        limpar();
        filtrar();
    }//GEN-LAST:event_jComboPesqItemStateChanged

    private void jTableHospedeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHospedeMouseClicked
        alterar();
    }//GEN-LAST:event_jTableHospedeMouseClicked

    private void jrPesqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrPesqKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jComboPesq.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jrPesqKeyPressed

    private void jComboPesqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboPesqKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jbAtualizar.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jComboPesqKeyPressed

    private void jbAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jbBUscar.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jbAtualizarKeyPressed

    private void jbBUscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbBUscarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jbLimpar.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jbBUscarKeyPressed

    private void jbLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbLimparKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jbDeletar.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jbLimparKeyPressed

    private void jbDeletarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbDeletarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jtNome.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jbDeletarKeyPressed

    private void jtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jtCPF.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtNomeKeyPressed

    private void jtCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCPFKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jtEnde.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtCPFKeyPressed

    private void jtEndeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtEndeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jtTelefone.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtEndeKeyPressed

    private void jtTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTelefoneKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jtRG.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtTelefoneKeyPressed

    private void jtRGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtRGKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jtCidade.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtRGKeyPressed

    private void jtCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCidadeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jrMasculino.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtCidadeKeyPressed

    private void jrMasculinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrMasculinoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jrFeminino.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jrMasculinoKeyPressed

    private void jrFemininoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrFemininoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            confirmarAlteracao();
            limpar();
            preencherTabela();
            limparCampos();
        }//fecha if
    }//GEN-LAST:event_jrFemininoKeyPressed

    private void jbAlterarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbAlterarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            confirmarAlteracao();
            limpar();
            preencherTabela();
            limparCampos();
        }//fecha if
    }//GEN-LAST:event_jbAlterarKeyPressed

    private void jtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeFocusLost
        if(jtNome.getText().isEmpty()){            
            jtNome.setBorder(BorderFactory.createLineBorder(Color.RED));
        }else{
           jtNome.setBorder(BorderFactory.createLineBorder(Color.gray));    
        }
    }//GEN-LAST:event_jtNomeFocusLost

    private void jtCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCPFFocusLost
        if(jtCPF.getText().isEmpty()){            
            jtCPF.setBorder(BorderFactory.createLineBorder(Color.RED));
        }else{
           jtCPF.setBorder(BorderFactory.createLineBorder(Color.gray));    
        }
    }//GEN-LAST:event_jtCPFFocusLost

    private void jtEndeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtEndeFocusLost
        if(jtEnde.getText().isEmpty()){            
            jtEnde.setBorder(BorderFactory.createLineBorder(Color.RED));
        }else{
           jtEnde.setBorder(BorderFactory.createLineBorder(Color.gray));    
        }
    }//GEN-LAST:event_jtEndeFocusLost

    private void jtTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtTelefoneFocusLost
        if(jtTelefone.getText().isEmpty()){            
            jtTelefone.setBorder(BorderFactory.createLineBorder(Color.RED));
        }else{
           jtTelefone.setBorder(BorderFactory.createLineBorder(Color.gray));    
        }
    }//GEN-LAST:event_jtTelefoneFocusLost

    private void jtRGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtRGFocusLost
        if(jtRG.getText().isEmpty()){            
            jtRG.setBorder(BorderFactory.createLineBorder(Color.RED));
        }else{
           jtRG.setBorder(BorderFactory.createLineBorder(Color.gray));    
        }
    }//GEN-LAST:event_jtRGFocusLost

    private void jtCidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCidadeFocusLost
        if(jtCidade.getText().isEmpty()){            
            jtCidade.setBorder(BorderFactory.createLineBorder(Color.RED));
        }else{
           jtCidade.setBorder(BorderFactory.createLineBorder(Color.gray));    
        }
    }//GEN-LAST:event_jtCidadeFocusLost



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JComboBox<String> jComboPesq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableHospede;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbBUscar;
    private javax.swing.JButton jbDeletar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JRadioButton jrFeminino;
    private javax.swing.JRadioButton jrMasculino;
    private javax.swing.JTextField jrPesq;
    private javax.swing.JTextField jtCPF;
    private javax.swing.JTextField jtCidade;
    private javax.swing.JTextField jtCod;
    private javax.swing.JTextField jtEnde;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtRG;
    private javax.swing.JTextField jtTelefone;
    // End of variables declaration//GEN-END:variables
}
